x-django: &default-django
  image: ${BACKEND_IMAGE_NAME:-manthrabin-backend}:${BACKEND_IMAGE_TAG:?error}
  build:
    context: .
    args:
      - DEBUG=${DEBUG:-false}
    tags:
      - "${BACKEND_IMAGE_NAME:-manthrabin-backend}:${BACKEND_IMAGE_TAG:?error}"
  env_file: 
    - path: ".env"
      required: true
  depends_on:
    mysql:
      condition: service_healthy
      restart: true
    redis:
      condition: service_healthy
      restart: true
    elasticsearch:
      condition: service_healthy
      restart: true

  healthcheck:
    test: ["CMD", "curl", "-f", "${DJANGO_HEALTHCHECK_URL:-127.0.0.1:8000/health}"]
    start_period: 10s
    interval: 30s
    timeout: 10s
    retries: 3

  restart: "${DOCKER_RESTART_POLICY:-always}"

  ports:
    - "${DJANGO_CONTAINER_HOST:-127.0.0.1}:${DJANGO_CONTAINER_PORT:-8000}:8000"

  volumes:
    - static_volume:/app/static
    - media_volume:/app/media
    - .env:/app/.env

services:
  mysql:
    container_name: mysql
    image: ${DB_IMAGE_NAME:?error}:${DB_IMAGE_TAG:?error}
    user: "${MYSQL_USER:-mysql}"

    env_file: 
      - path: ".env"
        required: true

    restart: "${DOCKER_RESTART_POLICY:-always}"

    volumes:
      - mariadb_data:/var/lib/mysql

    healthcheck:
      test: ["CMD", "bash", "-c",
            "mariadb-admin ping -h localhost --password=${MYSQL_ROOT_PASSWORD} --silent \
            && mariadb -h localhost -uroot -p${MYSQL_ROOT_PASSWORD} -e 'SELECT 1;'"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: public.ecr.aws/docker/library/redis:8.0.2-alpine
    container_name: redis
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: "${DOCKER_RESTART_POLICY:-always}"
  elasticsearch:
    image: public.ecr.aws/docker/library/elasticsearch:8.17.4
    container_name: elasticsearch
    ports:
      - "127.0.0.1:9200:9200"
    deploy:
      resources:
        limits:
          memory: 2g
    env_file: 
      - path: ".env"
        required: true
    environment:
      - discovery.type=single-node
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=12345678
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:9200/_cluster/health?wait_for_status=green&timeout=1s || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: "${DOCKER_RESTART_POLICY:-always}"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  backend:
    <<: *default-django
    container_name: backend-django
    profiles:
      - production


  backend-dev:
    <<: *default-django
    command: ["--host", "127.0.0.1", "--port", "8000", "--reload"]
    container_name: back-end
    profiles:
      - dev

  frontend:
    container_name: frontend
    image: ${FRONTEND_IMAGE_NAME:-manthrabin-frontend}:${FRONTEND_IMAGE_TAG:?error}
    build:
      context: ../Front-End/.
      args:
        - REACT_APP_API_URL=https://manthrabin.ir
      tags:
        - "${FRONTEND_IMAGE_NAME:-manthrabin-frontend}:${FRONTEND_IMAGE_TAG:?error}"
    restart: always
    ports:
      - "127.0.0.1:3000:80"
    environment:
      - REACT_APP_API_URL=https://manthrabin.ir
    profiles:
      - production
    depends_on:
      backend:
        condition: service_healthy
        restart: true

  frontend-dev:
    container_name: frontend-dev
    image: node:20-alpine
    working_dir: /app

    volumes:
      - ./frontend:/app
      - /app/node_modules

    ports:
      - "3000:3000"

    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true

    command: ["npm", "start"]

    restart: no
    profiles:
      - dev
    depends_on:
      - backend-dev

volumes:
  mariadb_data:
  elasticsearch_data:
  static_volume:
  media_volume:
